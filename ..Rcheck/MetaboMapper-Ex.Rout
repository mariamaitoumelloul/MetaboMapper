
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "MetaboMapper"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('MetaboMapper')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("MetaboMap")
> ### * MetaboMap
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MetaboMap
> ### Title: MetaboMap
> ### Aliases: MetaboMap
> 
> ### ** Examples
> 
> study_data <- data.frame(
+   metabolite_name = c("1-Methylhistidine", "2-Ketobutyric acid"),
+   HMDB_id = c("HMDB0000001", "HMDB0000005")
+ )
> 
> reference_data <- data.frame(
+   accession = c("HMDB0000001", "HMDB0000002", "HMDB0000005"),
+   name = c("1-Methylhistidine", "1,3-Diaminopropane", "2-Ketobutyric acid"),
+   all_HMDBs = c(
+     "HMDB0000001|HMDB00001|HMDB0004935",
+     "HMDB0000002|HMDB00002",
+     "HMDB0000005|HMDB00005|HMDB0006544"
+   ),
+   all_names = c(
+     "1-Methylhistidine|Pi-methylhistidine|",
+     "1,3-Diaminopropane|1,3-Propanediamine|1,3-Propylenediamine",
+     "2-Ketobutyric acid|2-Ketobutanoic acid|2-Oxobutyric acid"
+   )
+ )
> 
> result <- MetaboMap(
+   df_study = study_data,
+   study_cols = c("metabolite_name", "HMDB_id"),
+   identifiers = c("NAME", "HMDB"),
+   df_reference = reference_data,
+   details = FALSE,
+   original_colname = "metabolite_name"
+ )
Processing identifier: NAME 
Using study column: metabolite_name 
[1] "Mapping the names"
[1] "Number of identifier available in your dataset:  2"
[1] "2  metabolites mapped to HMDB Ids based on their labels."
Processing identifier: HMDB 
Using study column: HMDB_id 
[1] "Number of identifier available in your dataset:  2"
[1] "2  metabolites mapped to HMDB Ids based on their HMDB identifiers."
> 
> 
> 
> cleanEx()
> nameEx("hmdbextract")
> ### * hmdbextract
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: hmdbextract
> ### Title: Extract metabolite information from HMDB XML File
> ### Aliases: hmdbextract
> 
> ### ** Examples
> 
> ## Not run: 
> ##D   # Example usage
> ##D   extracted_data <- hmdbextract("path_to_hmdb.xml")
> ##D   head(extracted_data)
> ## End(Not run)
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.345 0.023 0.371 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
