
R version 4.3.0 (2023-04-21) -- "Already Tomorrow"
Copyright (C) 2023 The R Foundation for Statistical Computing
Platform: aarch64-apple-darwin20 (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> pkgname <- "MetaboMapper"
> source(file.path(R.home("share"), "R", "examples-header.R"))
> options(warn = 1)
> library('MetaboMapper')
> 
> base::assign(".oldSearch", base::search(), pos = 'CheckExEnv')
> base::assign(".old_wd", base::getwd(), pos = 'CheckExEnv')
> cleanEx()
> nameEx("MetaboMap")
> ### * MetaboMap
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: MetaboMap
> ### Title: MetaboMap
> ### Aliases: MetaboMap
> 
> ### ** Examples
> 
> # Example usage:
> study_data <- data.frame(metabolite_name=c("M1","M2"),id1 = c(1, 2), id2 = c("A", "B"))
> reference_data <- data.frame(ref_id = c(1, 2), name = c("X", "Y"))
> result <- MetaboMap(
+   df_study = study_data,
+   study_cols = c("id1", "id2"),
+   identifiers = c("ref_id", "name"),
+   df_reference = reference_data,
+   details = FALSE,
+   original_name = "metabolite_name"
+ )
Processing identifier: ref_id 
Using study column: id1Processing identifier: name 
Using study column: id2> 
> 
> 
> cleanEx()
> nameEx("hmdbextract")
> ### * hmdbextract
> 
> flush(stderr()); flush(stdout())
> 
> ### Name: hmdbextract
> ### Title: Extract Information of interest from HMDB XML File
> ### Aliases: hmdbextract
> 
> ### ** Examples
> 
> ## Not run: 
> ##D   # Example usage
> ##D   extracted_data <- hmdbextract("path_to_hmdb.xml")
> ##D   head(extracted_data)
> ## End(Not run)
> 
> 
> 
> 
> ### * <FOOTER>
> ###
> cleanEx()
> options(digits = 7L)
> base::cat("Time elapsed: ", proc.time() - base::get("ptime", pos = 'CheckExEnv'),"\n")
Time elapsed:  0.32 0.02 0.342 0 0 
> grDevices::dev.off()
null device 
          1 
> ###
> ### Local variables: ***
> ### mode: outline-minor ***
> ### outline-regexp: "\\(> \\)?### [*]+" ***
> ### End: ***
> quit('no')
