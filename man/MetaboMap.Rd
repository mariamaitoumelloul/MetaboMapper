% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/MetaboMapper_functions.R
\name{MetaboMap}
\alias{MetaboMap}
\title{MetaboMap}
\usage{
MetaboMap(
  df_study,
  study_cols,
  identifiers,
  df_reference,
  details = FALSE,
  original_name = ""
)
}
\arguments{
\item{df_study}{A data frame representing the study data containing metabolites information to be processed.}

\item{study_cols}{A column name or a vector of column names in `df_study` corresponding to identifiers to be mapped.}

\item{identifiers}{An identifier or a vector of identifiers to be mapped; must be the same length and same order as `study_cols`. It can takes values c("HMDB","NAME","KEGG","CHEBI","INCHIKEY")}

\item{df_reference}{Dataframe generated by the function hmdbextract().}

\item{details}{A boolean- Default Value is FALSE. TRUE allows to have additional details for each mapping identifier.}

\item{original_name}{The original name of the data or dataset for labeling purposes. Default value is "study".}
}
\value{
A data frame object containing the mapped identifiers with confidence levels.
}
\description{
Maps multiple identifiers from a study data frame to a reference data frame by iterating through corresponding identifier and study column pairs. Ensures data integrity, applies mapping functions, and adds confidence levels and labels.
}
\examples{
# Example usage:
study_data <- data.frame(metabolite_name=c("M1","M2"),id1 = c(1, 2), id2 = c("A", "B"))
reference_data <- data.frame(ref_id = c(1, 2), name = c("X", "Y"))
result <- MetaboMap(
  df_study = study_data,
  study_cols = c("id1", "id2"),
  identifiers = c("ref_id", "name"),
  df_reference = reference_data,
  details = FALSE,
  original_name = "metabolite_name"
)
}
